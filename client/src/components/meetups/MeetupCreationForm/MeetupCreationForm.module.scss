@use '../../../styles/variables.scss' as *;

.date-input {
  cursor: pointer;
  background: $color-grey-100;
  padding: 1.4rem 1.5rem;
  border-radius: 0.3rem;
  display: flex;
  align-items: center;

  & input {
    cursor: inherit;
    flex-grow: 1;
    outline: none;
  }

  & svg {
    font-size: 2rem;
    color: $color-grey-700;
  }
}

.form {
  padding: 0 2.5rem 5rem 2.5rem;
  padding-top: 0.1rem;
  margin-top: 7.4rem;
  overflow-y: scroll;
  position: relative;
}

.title {
  font-weight: 700;
  font-size: 2.4rem;
  border: none;
  padding: 1rem;
  // padding-left: 0.5rem;
}

.fields {
  display: flex;
  flex-direction: column;
  gap: 2.5rem;
}

.field {
  display: flex;
  flex-direction: column;
  gap: 1rem;

  :global .react-datepicker__tab-loop {
    position: absolute;
  }
}

.label {
  display: flex;
  gap: 0.5rem;
  align-items: center;

  & .guide {
    font-size: 1.4rem;
    color: $color-grey-500;
  }
}

.options {
  $options-gap: 1.2rem;

  display: flex;
  gap: $options-gap;
  flex-wrap: wrap;

  & .col {
    flex-basis: calc((100% - 2 * $options-gap) / 3);
  }
}

.path {
  & textarea {
    text-align: center;
  }
}

.birthYear {
  & .option {
    display: flex;
    gap: 1.5rem;
    align-items: center;
  }

  & .select {
    display: flex;
    gap: 1rem;
    align-items: center;
  }

  & .tilde {
    font-size: 2rem;
  }
}

.maxNumOfParticipants,
.participationFee {
  & .option,
  .regulator {
    display: flex;
    align-items: center;
  }

  & .option {
    gap: 2.5rem;
  }

  & .regulator {
    flex-grow: 1;
    background: $color-grey-100;
    padding: 1rem;
    justify-content: space-between;
    border-radius: 0.3rem;
  }
}

.number {
  flex-grow: 1;
  font-size: 1.8rem;
  text-align: center;
}
.number::-webkit-outer-spin-button,
.number::-webkit-inner-spin-button {
  -webkit-appearance: none;
}
.number[type='number'] {
  -moz-appearance: textfield;
}

.content {
  & textarea {
    width: 100%;
  }
}

.btn {
  margin-top: 3rem;
  text-align: center;
}
